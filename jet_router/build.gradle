apply plugin: 'com.android.library'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:support-annotations:25.0.1'
    compile 'com.google.code.gson:gson:2.2.4'

    //使用compile 也会使用APT生成代码，而且是模块间依赖会传递
//    compile project(':jet_compiler')

//    annotationProcessor project(':jet_compiler')

    if (doPackage == "True") {
        compile project(':jet_annotation')
    } else {
        compile "com.meiyou.framework:router-annotation:${DEPEND_VERSION}"
    }

    //也只会当前Module有效
    //    annotationProcessor project(':jet_compiler')
    //provided 只会在当前Module编译，不会被打包到AAR
//    provided project(':jet_compiler')
//    compile依赖会被传递到上层
//    compile project(':jet_compiler')

    if (doPackage == "True") {
        compile project(':jet_compiler')
    } else {
        compile "com.meiyou.framework:router-compiler:${DEPEND_VERSION}"
    }

    apply from: rootProject.file("mvn.gradle")
}
