apply plugin: 'com.android.application'
//apply plugin: 'com.neenbedankt.android-apt'
//apply plugin: 'android-aspectjx'


android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"
    defaultConfig {
        applicationId "com.seeker.protocol"
        minSdkVersion 14
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
//    compile project(':jet_router')
//    annotationProcessor project(':jet_compiler')


    compile 'com.android.support:appcompat-v7:25.0.0'
    compile 'com.android.support.constraint:constraint-layout:1.0.0-alpha8'
    compile 'com.android.support:design:25.0.1'
    testCompile 'junit:junit:4.12'
    compile 'com.jet.framework:jet:1.0.0'

    compile project(':module_b')

    //测试使用 编译器编译；
//    annotationProcessor project(':jet_compiler')
//    compile project(':jet_compiler')

}

//拷贝生成 META-INF 文件进去
//android.applicationVariants.all { variant ->
//    def variantName = variant.name
//    def variantNameCapitalized = variantName.capitalize()
//    def copyMetaInf = tasks.create "copyMetaInf$variantNameCapitalized", Copy
//    copyMetaInf.from project.fileTree(javaCompile.destinationDir)
//    copyMetaInf.include "META-INF/**"
//    copyMetaInf.into "build/intermediates/sourceFolderJavaResources/$variantName"
//    tasks.findByName("transformResourcesWithMergeJavaResFor$variantNameCapitalized").dependsOn copyMetaInf
//}

//拷贝生成的 assets/目录到打包目录
android.applicationVariants.all { variant ->
    def variantName = variant.name
    def variantNameCapitalized = variantName.capitalize()
    def copyMetaInf = tasks.create "copyMetaInf$variantNameCapitalized", Copy
    copyMetaInf.from project.fileTree(javaCompile.destinationDir)
    copyMetaInf.include "assets/**"
    copyMetaInf.into "build/intermediates/sourceFolderJavaResources/$variantName"
    tasks.findByName("transformResourcesWithMergeJavaResFor$variantNameCapitalized").dependsOn copyMetaInf
}